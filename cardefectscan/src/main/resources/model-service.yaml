openapi: 3.0.2
servers:
  - url: http://localhost:8888
  - url: http://model
info:
  description: ModelService API
  version: 0.1.0
  title: ModelService - OpenAPI 3.0
tags:
  - name: Images
    description: Operations with images

paths:
  /api/v1/process_request:
    post:
      tags:
        - Images
      summary: Process request
      description: Process the image loaded to S3
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageProcessRequest'
      responses:
        "200":
          description: Success
        "500":
          description: Internal Server Error

components:
  schemas:
    ImageProcessRequest:
      type: object
      required:
        - download_object_name
        - job_id
        - result_name
      properties:
        download_object_name:
          description: Name of the object to download.
          type: string
        job_id:
          description: Unique job id to identify request.
          type: string
        result_name:
          description: Name of the result object to be saved.
          type: string

    EventMessage:
      type: object
      required:
        - job_id
        - is_error
      properties:
        job_id:
          type: string
        is_error:
          type: boolean
        info:
          type: string

    ResultList:
      type: object
      properties:
        result:
          type: array
          items:
            type: integer
            additionalProperties:
              $ref: "#/components/schemas/ResultMetadata"

    ResultMetadata:
      type: object
      properties:
        damage_level:
          type: string
          description: "Уровень повреждения сегмента автомобиля"
          enum:
            - NONE
            - SCRATCH
            - DENT
            - CRACK
            - BROKEN
            - TOTAL_LOSS
          example: "DENT"
        segment_name:
          type: string
          description: "Название сегмента автомобиля, которое может прийти от модели. 0 всегда соответствует empty"
          x-enum-varnames:
            - "empty"
            - "front_bumper"
            - "rear_bumper"
            - "left_door"
            - "right_door"
            - "hood"
            - "trunk"
            - "roof"
            - "left_fender"
            - "right_fender"
            - "left_headlight"
            - "right_headlight"
            - "left_taillight"
            - "right_taillight"
            - "grill"
            - "windshield"
            - "rear_window"
            - "side_mirror_left"
            - "side_mirror_right"
          example:
            front_bumper:
              summary: "Передний бампер"
              value: "front_bumper"
            hood:
              summary: "Капот"
              value: "hood"
            left_door:
              summary: "Левая дверь"
              value: "left_door"
      required:
        - damage_level
        - segment_name