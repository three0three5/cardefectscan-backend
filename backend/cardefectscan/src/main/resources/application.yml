spring:
  application:
    name: cardefectscan
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        order_by.default_null_ordering: last
        format_sql: true
        default_schema: public
    open-in-view: false
    show-sql: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:5432/cardefectscan
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  mustache:
    check-template-location: false

  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: 5672
    username: ${RABBITMQ_USER}
    password: ${RABBITMQ_PASSWORD}
    virtual-host: /

  main:
    web-application-type: servlet

  security:
    user:
      name: disabled
      password: disabled

  config:
    import: optional:file:.env[.properties]

management:
  endpoint:
    health:
      probes:
        enabled: true


auth:
  refresh-lifespan: ${REFRESH_LIFESPAN:604800}
  jwt:
    lifespan: ${JWT_LIFESPAN:120}
    private-key: ${JWT_PRIVATE_KEY}
  cookies:
    is-http-only: ${IS_COOKIE_HTTP_ONLY:true}
    max-age: 604800
    is-secure: ${IS_COOKIE_SECURE:true}
    domain: ${APP_DOMAIN}

minio:
  endpoint: http://minio:9000
  access-key: ${MINIO_ROOT_USER}
  secret-key: ${MINIO_ROOT_PASSWORD}
  bucket: default
  put-link-expiration: 60
  get-link-expiration: 600

app:
  host: ${APP_HOST}

async:
  model-client:
    core-pool-size: 5
    max-pool-size: 10
    queue-capacity: 50

client:
  model-service-host: ${MODEL_SERVICE_HOST:http://model-service:8080}
